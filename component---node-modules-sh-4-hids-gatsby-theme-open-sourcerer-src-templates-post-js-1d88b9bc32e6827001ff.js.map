{"version":3,"file":"component---node-modules-sh-4-hids-gatsby-theme-open-sourcerer-src-templates-post-js-1d88b9bc32e6827001ff.js","mappings":"uKAsEA,UAzDa,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACrBC,EAAWD,EAAKE,eAChBC,EAAOF,EAASG,YAChBC,EAASL,EAAKM,KAAKC,aAAaF,OAAOG,SAC7C,EAAqDR,EAAKM,KAAKC,aAAvDE,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,sBAE3B,OACE,gBAAC,IAAD,CACEC,MAAOT,EAAKS,MACZC,IAAG,IAAMH,EAAWX,EAAYe,KAChCC,SAAU,CACRV,OAAAA,EACAW,WAAYf,EAASe,WACrBC,YAAad,EAAKc,aAEpBC,YAAajB,EAASkB,SAEtB,gBAAC,KAAD,CAAMC,QAAQ,MAAMC,KAAMpB,EAASoB,KAAMC,UAAU,cACnD,gBAAC,KAAD,CAAUC,KAAMpB,EAAKoB,MAAQ,GAAIb,SAAUA,IAC3C,gBAAC,KAAD,CACEE,MAAOT,EAAKS,MACZY,KAAMC,GAAAA,CAAQhB,EAASC,EAAUX,EAAYe,QAE9CH,EAAwB,gBAAC,KAAD,MAAyB","sources":["webpack://shahid.pro/./node_modules/@sh4hids/gatsby-theme-open-sourcerer/src/templates/Post.js"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport urljoin from 'url-join';\n\nimport {\n  Text,\n  SocialShareLinks,\n  PostTags,\n  UtterancesComments,\n} from '../components';\nimport { DefaultLayout } from '../layouts';\n\nconst Post = ({ pageContext, data }) => {\n  const postNode = data.markdownRemark;\n  const post = postNode.frontmatter;\n  const author = data.site.siteMetadata.author.fullName;\n  const { siteUrl, blogPath, utterancesCommentRepo } = data.site.siteMetadata;\n\n  return (\n    <DefaultLayout\n      title={post.title}\n      url={`/${blogPath}${pageContext.slug}`}\n      postMeta={{\n        author,\n        timeToRead: postNode.timeToRead,\n        publishedAt: post.publishedAt,\n      }}\n      description={postNode.excerpt}\n    >\n      <Text variant=\"raw\" html={postNode.html} className=\"post-body\" />\n      <PostTags tags={post.tags || {}} blogPath={blogPath} />\n      <SocialShareLinks\n        title={post.title}\n        link={urljoin(siteUrl, blogPath, pageContext.slug)}\n      />\n      {utterancesCommentRepo ? <UtterancesComments /> : <></>}\n    </DefaultLayout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query ($slug: String!) {\n    site {\n      siteMetadata {\n        siteUrl\n        blogPath\n        utterancesCommentRepo\n        author {\n          fullName\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        publishedAt\n        tags\n        slug\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n\nexport default Post;\n"],"names":["pageContext","data","postNode","markdownRemark","post","frontmatter","author","site","siteMetadata","fullName","siteUrl","blogPath","utterancesCommentRepo","title","url","slug","postMeta","timeToRead","publishedAt","description","excerpt","variant","html","className","tags","link","urljoin"],"sourceRoot":""}