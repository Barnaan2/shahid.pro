{"version":3,"file":"component---node-modules-sh-4-hids-gatsby-theme-open-sourcerer-src-templates-post-js-5db9bb0ae49913b59bdc.js","mappings":"uKA0FA,UA5Ea,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACrBC,EAAWD,EAAKE,eAChBC,EAAOF,EAASG,YAChBC,EAASL,EAAKM,KAAKC,aAAaF,OAAOG,SAC7C,EACER,EAAKM,KAAKC,aADJE,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,sBAAuBC,EAAlD,EAAkDA,YAE5CC,EAAUD,EAAW,GACpBA,EAAcb,EAAYe,KAAKC,MAChC,GACAhB,EAAYe,KAAKE,OAAS,GAHL,MAKvB,GAEJ,OACE,gBAAC,IAAD,CACEC,MAAOd,EAAKc,MACZC,IAAG,IAAMR,EAAWX,EAAYe,KAChCK,SAAU,CACRd,OAAAA,EACAe,WAAYnB,EAASmB,WACrBC,YAAalB,EAAKkB,aAEpBC,YAAarB,EAASsB,SAEtB,gBAAC,KAAD,CAAMC,QAAQ,MAAMC,KAAMxB,EAASwB,KAAMC,UAAU,cAClDb,EACC,gCACE,gBAAC,KAAD,CAASc,GAAI,EAAGC,GAAI,EAAGC,MAAM,SAC7B,gBAAC,KAAD,CAAML,QAAQ,UAAd,kBACiB,qBAAGM,KAAMjB,GAAT,QADjB,KAGA,gBAAC,KAAD,CAASc,GAAI,EAAGC,GAAI,EAAGC,MAAM,UAG/B,iCAEF,gBAAC,KAAD,CAAUE,KAAM5B,EAAK4B,MAAQ,GAAIrB,SAAUA,IAC3C,gBAAC,KAAD,CACEO,MAAOd,EAAKc,MACZe,KAAMC,GAAAA,CAAQxB,EAASC,EAAUX,EAAYe,QAE9CH,EAAwB,gBAAC,KAAD,MAAyB","sources":["webpack://shahid.pro/./node_modules/@sh4hids/gatsby-theme-open-sourcerer/src/templates/Post.js"],"sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport urljoin from 'url-join';\n\nimport {\n  Text,\n  SocialShareLinks,\n  PostTags,\n  UtterancesComments,\n  Divider,\n} from '../components';\nimport { DefaultLayout } from '../layouts';\n\nconst Post = ({ pageContext, data }) => {\n  const postNode = data.markdownRemark;\n  const post = postNode.frontmatter;\n  const author = data.site.siteMetadata.author.fullName;\n  const { siteUrl, blogPath, utterancesCommentRepo, baseEditUrl } =\n    data.site.siteMetadata;\n  const editUrl = baseEditUrl\n    ? `${baseEditUrl}${pageContext.slug.slice(\n        11,\n        pageContext.slug.length - 1\n      )}.md`\n    : '';\n\n  return (\n    <DefaultLayout\n      title={post.title}\n      url={`/${blogPath}${pageContext.slug}`}\n      postMeta={{\n        author,\n        timeToRead: postNode.timeToRead,\n        publishedAt: post.publishedAt,\n      }}\n      description={postNode.excerpt}\n    >\n      <Text variant=\"raw\" html={postNode.html} className=\"post-body\" />\n      {editUrl ? (\n        <>\n          <Divider mt={4} mb={3} width=\"8rem\" />\n          <Text variant=\"label1\">\n            Edit this post <a href={editUrl}>here</a>.\n          </Text>\n          <Divider mt={3} mb={4} width=\"8rem\" />\n        </>\n      ) : (\n        <></>\n      )}\n      <PostTags tags={post.tags || {}} blogPath={blogPath} />\n      <SocialShareLinks\n        title={post.title}\n        link={urljoin(siteUrl, blogPath, pageContext.slug)}\n      />\n      {utterancesCommentRepo ? <UtterancesComments /> : <></>}\n    </DefaultLayout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query ($slug: String!) {\n    site {\n      siteMetadata {\n        siteUrl\n        blogPath\n        baseEditUrl\n        utterancesCommentRepo\n        author {\n          fullName\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        publishedAt\n        tags\n        slug\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n\nexport default Post;\n"],"names":["pageContext","data","postNode","markdownRemark","post","frontmatter","author","site","siteMetadata","fullName","siteUrl","blogPath","utterancesCommentRepo","baseEditUrl","editUrl","slug","slice","length","title","url","postMeta","timeToRead","publishedAt","description","excerpt","variant","html","className","mt","mb","width","href","tags","link","urljoin"],"sourceRoot":""}