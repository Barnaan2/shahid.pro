{"version":3,"file":"component---node-modules-sh-4-hids-gatsby-theme-open-sourcerer-src-templates-posts-js-dd247397a88a5e533296.js","mappings":"sMAwJA,GAtJoBA,EAAAA,EAAAA,mBAAH,swCAUE,qBAAGC,MAAkBC,MAAMC,QAC7B,qBAAGF,MAAkBG,UAAUD,QAC7B,qBAAGF,MAAkBI,YAAYF,QASjC,qBAAGF,MAAkBI,YAAYC,WACtC,qBAAGL,MAAkBM,MAAMC,MAIxB,qBAAGP,MAAkBG,UAAUK,MAI/B,qBAAGR,MAAkBG,UAAUM,MAI/B,qBAAGT,MAAkBG,UAAUO,MAI/B,qBAAGV,MAAkBG,UAAUQ,MAI/B,qBAAGX,MAAkBG,UAAUS,MAI/B,qBAAGZ,MAAkBG,UAAUU,MAclC,kBACO,SADP,EAAGb,MACLc,KAAN,gCAA0D,MAQlD,qBAAGd,MAAkBM,MAAMS,MACxB,qBAAGf,MAAkBM,MAAMS,MACf,qBAAGf,MAAkBgB,OAAOC,YACxC,qBAAGjB,MAAkBG,UAAUS,MAE7B,qBAAGZ,MAAkBI,YAAYC,WAKtC,qBAAGL,MAAkBM,MAAMS,MAatB,qBAAGf,MAAkBG,UAAUD,QAC7B,qBAAGF,MAAkBkB,YAAYC,UACjC,qBAAGnB,MAAkBI,YAAYgB,QAK9B,qBAAGpB,MAAkBM,MAAMe,M,uCC3F7CC,EAAgB,SAAC,GAQhB,IAPLC,EAOI,EAPJA,SACAC,EAMI,EANJA,MACAC,EAKI,EALJA,UACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,MACAC,EACI,EADJA,SAEMC,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GACrBC,EAAgBH,EAAQI,WAAa,QAE3C,OACE,gBAAC,EAAAC,cAAD,CAAenC,MAAOoC,EAAOH,IAC3B,gBAAC,EAAD,MACA,gBAAC,KAAD,CACET,MAAOa,GAAAA,CAAYb,GACnBE,YAAaA,EACbC,IAAKA,EACLC,MAAOA,IAET,gBAAC,KAAD,CACEM,UAAWJ,EAAQI,UACnBI,aAAcR,EAAQQ,eAExB,gBAAC,KAAD,CACEd,MAAOC,GAAaY,GAAAA,CAAYb,GAChCE,YAAaA,EACbG,SAAUA,IAEZ,gBAAC,KAAD,CAAWU,EAAG,GAAIhB,GAClB,gBAAC,KAAD,QAKND,EAAckB,aAAe,CAC3BhB,MAAO,GACPC,UAAW,GACXC,YAAa,GACbC,IAAK,GACLC,MAAO,GACPC,SAAU,MAiBZ,QC3DMY,EAAiB,SAAC,GAAkD,IAAhDlB,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,MAAOE,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MAErDK,GADUF,EAAAA,EAAAA,YAAWC,EAAAA,GACGE,WAAa,QAE3C,OACE,gBAAC,EAAAC,cAAD,CAAenC,MAAOoC,EAAOH,IAC3B,gBAAC,KAAD,CACET,MAAOa,GAAAA,CAAYb,GACnBE,YAAaA,EACbC,IAAKA,EACLC,MAAOA,IAET,gBAAC,EAAD,MACCL,IAKPkB,EAAeD,aAAe,CAC5BhB,MAAO,GACPE,YAAa,GACbC,IAAK,GACLC,MAAO,IAWT,S,8DCsBA,UA1Dc,SAAC,GAA2B,IAAzBc,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACfC,EAAQF,EAAKG,kBAAkBC,MACrC,EAAgCJ,EAAKK,KAAKC,aAAlCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,gBAAC,IAAD,CACE1B,MAAO0B,GAAa,OACpBvB,IACEgB,EAAYQ,gBAAkB,EAA9B,SACaR,EAAYQ,gBADzB,cAKDP,EAAMQ,OACLR,EAAMS,KAAI,SAACC,GAAD,OACR,gBAAC,KAAD,CAAiBA,KAAMA,EAAML,SAAUA,EAAUM,IAAKD,EAAKE,KAAKC,QAGlE,gBAAC,KAAD,yBAEF,gBAAC,KAAD,CAAUd,YAAaA","sources":["webpack://shahid.pro/./node_modules/@sh4hids/gatsby-theme-open-sourcerer/src/styles/GlobalStyles.js","webpack://shahid.pro/./node_modules/@sh4hids/gatsby-theme-open-sourcerer/src/layouts/DefaultLayout.js","webpack://shahid.pro/./node_modules/@sh4hids/gatsby-theme-open-sourcerer/src/layouts/FullPageLayout.js","webpack://shahid.pro/./node_modules/@sh4hids/gatsby-theme-open-sourcerer/src/templates/Posts.js"],"sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background-color: var(--color-bg-0);\n    color: var(--color-text-0);\n    font-family: ${({ theme }) => theme.fonts.body};\n    font-size: ${({ theme }) => theme.fontSizes.body};\n    line-height: ${({ theme }) => theme.lineHeights.body};\n  }\n\n  p {\n    margin: 1rem 0 2rem 0;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    font-weight: 700;\n    line-height: ${({ theme }) => theme.lineHeights.heading};\n    margin: ${({ theme }) => theme.space.xl}px 0;\n  }\n\n  h1 {\n    font-size: ${({ theme }) => theme.fontSizes.h1};\n  }\n  \n  h2 {\n    font-size: ${({ theme }) => theme.fontSizes.h2};\n  }\n  \n  h3 {\n    font-size: ${({ theme }) => theme.fontSizes.h3};\n  }\n  \n  h4 {\n    font-size: ${({ theme }) => theme.fontSizes.h4};\n  }\n  \n  h5 {\n    font-size: ${({ theme }) => theme.fontSizes.h5};\n  }\n  \n  h6 {\n    font-size: ${({ theme }) => theme.fontSizes.h6};\n  }\n\n  a {\n    text-decoration: none;\n    color: var(--color-accent-0);\n    transition: all ease-in-out 0.3s;\n\n    &:hover {\n      color: var(--color-accent-1);\n    }\n  }\n\n  img {\n    filter: ${({ theme }) =>\n      theme.name === 'dark' ? `brightness(0.8) contrast(1.2)` : ''};\n  }\n\n  blockquote {\n    p {\n      margin: 0;\n    }\n\n    margin: ${({ theme }) => theme.space.lg}px 0;\n    padding: 0 ${({ theme }) => theme.space.lg}px;\n    border-left: 4px solid ${({ theme }) => theme.colors.primary0};\n    font-size: ${({ theme }) => theme.fontSizes.h5};\n    font-style: italic;\n    line-height: ${({ theme }) => theme.lineHeights.heading};\n  }\n\n  .gatsby-highlight {\n    overflow: auto;\n    margin: ${({ theme }) => theme.space.lg}px 0;\n    \n    pre {\n      border-radius: 8px;\n    }\n  }\n\n  ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n\n    li {\n      font-size: ${({ theme }) => theme.fontSizes.body};\n      font-weight: ${({ theme }) => theme.fontWeights.normal};\n      line-height: ${({ theme }) => theme.lineHeights.list};\n\n      ::before {\n        color: var(--color-text-0);\n        content: 'â§‰';\n        margin-right: ${({ theme }) => theme.space.md}px;\n      }\n    }\n  }\n\n  .post-body {\n    word-break: break-word;\n    \n    p {\n      margin: 2rem 0;\n\n      :first-child {\n        margin-top: 0;\n      }\n    }\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n      scroll-margin-top: 76px;\n    }\n  }\n\n  ::-webkit-scrollbar {\n    width: 8px;\n    height: 8px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: var(--color-bg-1);\n  }\n\n  ::-webkit-scrollbar-thumb {\n    cursor: pointer;\n    background-color: var(--color-accent-0);\n    transition: all ease-in-out 0.3s;\n\n    \n    :hover {\n      background-color: var(--color-accent-1);\n    }\n    \n    :active {\n      background-color: var(--color-accent-2);\n    }\n  }\n`;\n\nexport default GlobalStyle;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider } from 'styled-components';\n\nimport * as themes from '../styles/themes';\nimport GlobalStyle from '../styles/GlobalStyles';\nimport { ThemeContext } from '../../ThemeProvider';\nimport { Header, Container, Footer, SEO, HeroSection } from '../components';\nimport toTitleCase from '../utils/toTitleCase';\n\nconst DefaultLayout = ({\n  children,\n  title,\n  heroTitle,\n  description,\n  url,\n  image,\n  postMeta,\n}) => {\n  const context = useContext(ThemeContext);\n  const selectedTheme = context.colorMode || 'light';\n\n  return (\n    <ThemeProvider theme={themes[selectedTheme]}>\n      <GlobalStyle />\n      <SEO\n        title={toTitleCase(title)}\n        description={description}\n        url={url}\n        image={image}\n      />\n      <Header\n        colorMode={context.colorMode}\n        setColorMode={context.setColorMode}\n      />\n      <HeroSection\n        title={heroTitle || toTitleCase(title)}\n        description={description}\n        postMeta={postMeta}\n      />\n      <Container p={3}>{children}</Container>\n      <Footer />\n    </ThemeProvider>\n  );\n};\n\nDefaultLayout.defaultProps = {\n  title: '',\n  heroTitle: '',\n  description: '',\n  url: '',\n  image: '',\n  postMeta: null,\n};\n\nDefaultLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n  heroTitle: PropTypes.string,\n  description: PropTypes.string,\n  url: PropTypes.string,\n  image: PropTypes.string,\n  postMeta: PropTypes.shape({\n    author: PropTypes.string,\n    publishedAt: PropTypes.string,\n    timeToRead: PropTypes.number,\n  }),\n};\n\nexport default DefaultLayout;\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider } from 'styled-components';\n\nimport * as themes from '../styles/themes';\nimport GlobalStyle from '../styles/GlobalStyles';\nimport { ThemeContext } from '../../ThemeProvider';\nimport { SEO } from '../components';\nimport toTitleCase from '../utils/toTitleCase';\n\nconst FullPageLayout = ({ children, title, description, url, image }) => {\n  const context = useContext(ThemeContext);\n  const selectedTheme = context.colorMode || 'light';\n\n  return (\n    <ThemeProvider theme={themes[selectedTheme]}>\n      <SEO\n        title={toTitleCase(title)}\n        description={description}\n        url={url}\n        image={image}\n      />\n      <GlobalStyle />\n      {children}\n    </ThemeProvider>\n  );\n};\n\nFullPageLayout.defaultProps = {\n  title: '',\n  description: '',\n  url: '',\n  image: '',\n};\n\nFullPageLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  url: PropTypes.string,\n  image: PropTypes.string,\n};\n\nexport default FullPageLayout;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\nimport { Text, Paginate, PostSummaryCard } from '../components';\nimport { DefaultLayout } from '../layouts';\n\nconst Posts = ({ data, pageContext }) => {\n  const posts = data.allMarkdownRemark.edges;\n  const { blogPath, blogTitle } = data.site.siteMetadata;\n\n  return (\n    <DefaultLayout\n      title={blogTitle || 'Blog'}\n      url={\n        pageContext.humanPageNumber > 1\n          ? `/blog/${pageContext.humanPageNumber}/`\n          : `/blog/`\n      }\n    >\n      {posts.length ? (\n        posts.map((post) => (\n          <PostSummaryCard post={post} blogPath={blogPath} key={post.node.id} />\n        ))\n      ) : (\n        <Text>No post to show!</Text>\n      )}\n      <Paginate pageContext={pageContext} />\n    </DefaultLayout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query ($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___publishedAt], order: DESC }\n      skip: $skip\n      limit: $limit\n      filter: { frontmatter: { isPublished: { eq: true } } }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            publishedAt\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        blogPath\n        blogTitle\n      }\n    }\n  }\n`;\n\nexport default Posts;\n"],"names":["createGlobalStyle","theme","fonts","body","fontSizes","lineHeights","heading","space","xl","h1","h2","h3","h4","h5","h6","name","lg","colors","primary0","fontWeights","normal","list","md","DefaultLayout","children","title","heroTitle","description","url","image","postMeta","context","useContext","ThemeContext","selectedTheme","colorMode","ThemeProvider","themes","toTitleCase","setColorMode","p","defaultProps","FullPageLayout","data","pageContext","posts","allMarkdownRemark","edges","site","siteMetadata","blogPath","blogTitle","humanPageNumber","length","map","post","key","node","id"],"sourceRoot":""}