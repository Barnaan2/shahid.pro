{"version":3,"file":"component---src-sh-4-hids-gatsby-theme-open-sourcerer-pages-index-js-38065d0b367d2c824d18.js","mappings":"yKAyJA,UA3IkB,WAChB,IAAMA,GAAOC,EAAAA,EAAAA,gBAAe,cAgE5B,GAA0BD,EAAKE,YAAYC,MAAM,IAAM,IAA/CC,SAAAA,OAAR,MAAmB,GAAnB,EACMC,EAAQL,EAAKM,kBAAkBC,MAC/BC,EAAaR,EAAKM,kBAAkBG,YAAc,EACxD,EAA6BT,EAAKU,KAAKC,aAA/BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OACZC,EAAWV,EAASW,MAAM,EAAG,GAEtBC,GAAYhB,EAAKiB,gBAAkB,IAA1Cd,MAGN,OAFAa,EAAUA,EAAQD,MAAM,EAAG,GAGzB,gBAAC,IAAD,CACEG,MAAM,OACNC,YAAaN,EAAOO,QACpBC,UACER,EAAOS,SAAP,YAA8BT,EAAOS,SAArC,MAAqD,kBAGtDR,GAAYA,EAASS,OACpB,gBAAC,KAAD,KACE,gBAAC,KAAD,CAAMC,QAAQ,KAAKC,UAAU,SAASC,GAAI,GAA1C,wBAGA,gBAAC,KAAD,CAAaZ,SAAUA,EAAUa,MAAO,IACvCb,EAASS,QAAU,EAClB,gBAAC,KAAD,CAAKE,UAAU,SAASG,GAAI,GAC1B,gBAAC,KAAD,CAAYC,GAAG,cAAf,sBAGF,kCAIJ,iCAEDxB,GAASA,EAAMkB,OACd,gBAAC,KAAD,CAAKO,GAAI,GACP,gBAAC,KAAD,CAAMN,QAAQ,KAAKC,UAAU,SAASC,GAAI,GAA1C,gBAGCrB,EAAM0B,KAAI,SAACC,GAAD,OACT,gBAAC,KAAD,CACEA,KAAMA,EACNpB,SAAUA,EACVqB,IAAKD,EAAKE,KAAKC,QAGlB3B,EAAa,EACZ,gBAAC,KAAD,CAAKiB,UAAU,SAASG,GAAI,GAC1B,gBAAC,KAAD,CAAYC,GAAE,IAAMjB,EAAN,KAAd,mBAGF,kCAIJ,iCAEDI,EAAQO,OACP,gCACE,gBAAC,KAAD,CAAMC,QAAQ,KAAKC,UAAU,SAASC,GAAI,GAA1C,qBAGA,gBAAC,IAAD,CAAWU,OAAQpB,IACnB,gBAAC,KAAD,CAAKS,UAAU,SAASK,GAAI,GAC1B,gBAAC,KAAD,CAAYD,GAAG,aAAf,qBAIJ","sources":["webpack://shahid.pro/./src/@sh4hids/gatsby-theme-open-sourcerer/pages/index.js"],"sourcesContent":["import React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { DefaultLayout } from '@sh4hids/gatsby-theme-open-sourcerer/src/layouts';\nimport {\n  Box,\n  Text,\n  ProjectGrid,\n  PostSummaryCard,\n  LinkButton,\n} from '@sh4hids/gatsby-theme-open-sourcerer/src/components';\n\nimport { ImageGrid } from '../../../components';\n\nconst IndexPage = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          blogPath\n          postPerPage\n          author {\n            nickName\n            summary\n          }\n        }\n      }\n      allYamlPage(filter: { pageType: { eq: \"Projects\" } }) {\n        nodes {\n          metaDescription\n          pageType\n          title\n          contents {\n            ... on Project {\n              name\n              description\n              url\n              githubRepo\n            }\n          }\n        }\n      }\n      allMarkdownRemark(\n        sort: { fields: [frontmatter___publishedAt], order: DESC }\n        skip: 0\n        limit: 4\n        filter: { frontmatter: { isPublished: { eq: true } } }\n      ) {\n        totalCount\n        edges {\n          node {\n            id\n            fields {\n              slug\n            }\n            excerpt\n            timeToRead\n            frontmatter {\n              title\n              tags\n              publishedAt\n            }\n          }\n        }\n      }\n      allFlowersJson {\n        nodes {\n          id\n          name\n          image {\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const { contents = [] } = data.allYamlPage.nodes[0] || {};\n  const posts = data.allMarkdownRemark.edges;\n  const totalPosts = data.allMarkdownRemark.totalCount || 0;\n  const { blogPath, author } = data.site.siteMetadata;\n  const projects = contents.slice(0, 4);\n\n  let { nodes: flowers } = data.allFlowersJson || {};\n  flowers = flowers.slice(0, 6);\n\n  return (\n    <DefaultLayout\n      title=\"Home\"\n      description={author.summary}\n      heroTitle={\n        author.nickName ? `Hi, I am ${author.nickName}...` : 'Hello there...'\n      }\n    >\n      {projects && projects.length ? (\n        <Box>\n          <Text variant=\"h2\" textAlign=\"center\" mb={4}>\n            Open Source Projects\n          </Text>\n          <ProjectGrid projects={projects} limit={4} />\n          {projects.length >= 4 ? (\n            <Box textAlign=\"center\" mt={4}>\n              <LinkButton to=\"/projects/\">See More Projects</LinkButton>\n            </Box>\n          ) : (\n            <></>\n          )}\n        </Box>\n      ) : (\n        <></>\n      )}\n      {posts && posts.length ? (\n        <Box my={5}>\n          <Text variant=\"h2\" textAlign=\"center\" mb={4}>\n            Recent Posts\n          </Text>\n          {posts.map((post) => (\n            <PostSummaryCard\n              post={post}\n              blogPath={blogPath}\n              key={post.node.id}\n            />\n          ))}\n          {totalPosts > 4 ? (\n            <Box textAlign=\"center\" mt={4}>\n              <LinkButton to={`/${blogPath}/`}>See More Posts</LinkButton>\n            </Box>\n          ) : (\n            <></>\n          )}\n        </Box>\n      ) : (\n        <></>\n      )}\n      {flowers.length ? (\n        <>\n          <Text variant=\"h2\" textAlign=\"center\" mb={4}>\n            My Rooftop Garden\n          </Text>\n          <ImageGrid images={flowers} />\n          <Box textAlign=\"center\" my={4}>\n            <LinkButton to=\"/gallery/\">See More Photos</LinkButton>\n          </Box>\n        </>\n      ) : (\n        <></>\n      )}\n    </DefaultLayout>\n  );\n};\n\nexport default IndexPage;\n"],"names":["data","useStaticQuery","allYamlPage","nodes","contents","posts","allMarkdownRemark","edges","totalPosts","totalCount","site","siteMetadata","blogPath","author","projects","slice","flowers","allFlowersJson","title","description","summary","heroTitle","nickName","length","variant","textAlign","mb","limit","mt","to","my","map","post","key","node","id","images"],"sourceRoot":""}