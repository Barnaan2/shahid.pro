{"version":3,"sources":["webpack:///./src/views/templates/blog-post.js","webpack:///./node_modules/@debiki/gatsby-plugin-talkyard/index.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteUrl","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","readingTime","fields","slug","frontmatter","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_layouts__WEBPACK_IMPORTED_MODULE_4__","_components__WEBPACK_IMPORTED_MODULE_3__","description","excerpt","_kits__WEBPACK_IMPORTED_MODULE_5__","card","color","variant","html","Fragment","url","_debiki_gatsby_plugin_talkyard__WEBPACK_IMPORTED_MODULE_2___default","discussionId","React","Component","pageQuery","exports","__esModule","_classCallCheck3","_interopRequireDefault","require","_possibleConstructorReturn3","_inherits3","_react","_react2","obj","default","scriptTagAdded","TalkyardCommentsIframe","_Component","call","prototype","componentDidMount","isReMounting","scriptElem","document","headOrBodyElem","getElementsByTagName","async","type","src","window","talkyardScriptUrl","talkyardServerUrl","appendChild","addScriptTagOnce","talkyardReloadCommentsAndEditor","componentWillUnmount","talkyardRemoveCommentsAndEditor","className","data-discussion-id","data-talkyard-page-id","talkyardPageId","edPageId","style","marginTop","opacity","fontSize","href"],"mappings":"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","file":"component---src-views-templates-blog-post-js-a18f92764ac5f656f9bb.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport TalkyardCommentsIframe from '@debiki/gatsby-plugin-talkyard';\nimport { PostMeta, PrevNext, SEO, SocialShareSection } from '../components';\nimport { DefaultLayout } from '../layouts';\nimport { Container, Text } from '../kits';\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = this.props.data.site.siteMetadata.title;\n    const siteUrl = this.props.data.site.siteMetadata.siteUrl;\n    const { previous, next } = this.props.pageContext;\n    const { readingTime } = post.fields;\n    const disqusConfig = {\n     shortname: process.env.GATSBY_DISQUS_NAME,\n     config: { identifier: post.fields.slug, title: post.frontmatter.title },\n    }\n\n    return (\n      <DefaultLayout>\n        <SEO title={post.frontmatter.title} description={post.excerpt} />\n        <Container card>\n          <Text color=\"dark\" variant=\"h4\">\n            {post.frontmatter.title}\n          </Text>\n          <PostMeta post={post} readingTime={readingTime} />\n          <hr />\n          <Text variant=\"raw\" html={post.html} />\n          {(previous || next) && (\n            <>\n              <hr />\n              <PrevNext previous={previous} next={next} />\n            </>\n          )}\n          <hr />\n          <SocialShareSection\n            url={`${siteUrl}/${post.fields.slug}`}\n            title={post.frontmatter.title}\n          />\n          <hr />\n          <TalkyardCommentsIframe discussionId={post.frontmatter.discussionId} />\n        </Container>\n      </DefaultLayout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        siteUrl\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        discussionId\n      }\n      fields {\n        slug\n        readingTime {\n          text\n        }\n      }\n    }\n  }\n`;\n","'use strict';\n\nexports.__esModule = true;\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar scriptTagAdded = false; /** Copyright (c) 2017-2018 Kaj Magnus Lindberg. License: MIT. */\n\nfunction addScriptTagOnce() {\n  if (scriptTagAdded) return;\n\n  var scriptElem = document.createElement('script');\n  var headOrBodyElem = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0];\n\n  scriptElem.async = true;\n  scriptElem.type = 'text/javascript';\n  scriptElem.src = window.talkyardScriptUrl || 'https://c1.ty-cdn.net/-/talkyard-comments.min.js';\n  window.talkyardServerUrl = window.talkyardServerUrl || 'https://comments-demo.talkyard.io';\n\n  headOrBodyElem.appendChild(scriptElem);\n  scriptTagAdded = true;\n}\n\nvar TalkyardCommentsIframe = function (_Component) {\n  (0, _inherits3.default)(TalkyardCommentsIframe, _Component);\n\n  function TalkyardCommentsIframe(props) {\n    (0, _classCallCheck3.default)(this, TalkyardCommentsIframe);\n    return (0, _possibleConstructorReturn3.default)(this, _Component.call(this, props));\n  }\n\n  TalkyardCommentsIframe.prototype.componentDidMount = function componentDidMount() {\n    var isReMounting = scriptTagAdded;\n    addScriptTagOnce();\n    if (isReMounting) {\n      // The user have navigated to a new page, via history.push() and un/remounting components.\n      // We need to reload comments, for this new URL.\n      // But maybe the user har clicked links to new pages super quickly, so the script hasn't\n      // loaded yet, so check if the fn exists.\n      if (window.talkyardReloadCommentsAndEditor) {\n        window.talkyardReloadCommentsAndEditor();\n      }\n    }\n  };\n\n  TalkyardCommentsIframe.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (window.talkyardRemoveCommentsAndEditor) {\n      window.talkyardRemoveCommentsAndEditor();\n    }\n  };\n\n  TalkyardCommentsIframe.prototype.render = function render() {\n    return _react2.default.createElement(\n      'div',\n      { className: 'talkyard-comments', 'data-discussion-id': this.props.discussionId || '', 'data-talkyard-page-id': this.props.talkyardPageId || this.props.edPageId || '' },\n      _react2.default.createElement(\n        'noscript',\n        null,\n        'Please enable Javascript to view comments.'\n      ),\n      _react2.default.createElement(\n        'p',\n        { style: { marginTop: 25, opacity: 0.9, fontSize: '96%' } },\n        'Comments powered by ',\n        _react2.default.createElement(\n          'a',\n          { href: 'https://www.talkyard.io' },\n          'Talkyard'\n        ),\n        '.'\n      )\n    );\n  };\n\n  return TalkyardCommentsIframe;\n}(_react.Component);\n\nexports.default = TalkyardCommentsIframe;"],"sourceRoot":""}